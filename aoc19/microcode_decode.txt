0  addi 4 16 4  reg4 = reg4 + 16      // IP: Jump to #17
1  seti 1 9 3   reg3 = 1
2  seti 1 6 2   reg2 = 1
3  mulr 3 2 5   reg5 = reg3 * reg2
4  eqrr 5 1 5   reg5 = reg5 == reg1
5  addr 5 4 4   reg4 = reg4 + reg5    // IP - jump over #6 if reg5==reg1
6  addi 4 1 4   reg4 = reg4 + 1       // IP - jump over #7
7  addr 3 0 0   reg0 = reg3 + reg0
8  addi 2 1 2   reg2 = reg2 + 1
9  gtrr 2 1 5   reg5 = reg2 > reg1
10 addr 4 5 4   reg4 = reg4 + reg5    // IP: Jump over #11 if reg2 > reg1
11 seti 2 9 4   reg4 = 2              // IP: Jump to #3
12 addi 3 1 3   reg3 = reg3 + 1
13 gtrr 3 1 5   reg5 = reg3 > reg1
14 addr 5 4 4   reg4 = reg4 + reg5    // IP: Jump over #15 if reg3 > reg1
15 seti 1 0 4   reg4 = 1              // IP: Jump to #2
16 mulr 4 4 4   reg4 = reg4 * reg4    // IP: PROGRAM END (16 * 16 > num insts)

# Setup reg1 
17 addi 1 2 1   
18 mulr 1 1 1
19 mulr 4 1 1
20 muli 1 11 1
21 addi 5 1 5
22 mulr 5 4 5
23 addi 5 2 5
24 addr 1 5 1
25 addr 4 0 4
26 seti 0 1 4
27 setr 4 3 5
28 mulr 5 4 5
29 addr 4 5 5
30 mulr 4 5 5
31 muli 5 14 5
32 mulr 5 4 5
33 addr 1 5 1
34 seti 0 6 0
35 seti 0 7 4

