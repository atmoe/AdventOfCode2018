#ip 3
0  seti 123 0 1         reg1 = 123
1  bani 1 456 1         reg1 = reg1 & 456       // 123 & 456 = 002
2  eqri 1 72 1          reg1 = reg1 == 72
3  addr 1 3 3           // Jump over #4 if prev was true
4  seti 0 0 3           // Jump to start #0

5  seti 0 7 1           reg1 = 0
6  bori 1 65536 4       reg4 = reg1 | 0x10000
7  seti 3798839 3 1     reg1 = 0x39f737
8  bani 4 255 5         reg5 = reg4 & 0xff
9  addr 1 5 1           reg1 = reg1 + reg5
10 bani 1 16777215 1    reg1 = reg1 & 0xffffff
11 muli 1 65899 1       reg1 = reg1 * 0x10035
12 bani 1 16777215 1    reg1 = reg1 & 0xffffff
13 gtir 256 4 5         reg5 = 256 > reg4
14 addr 5 3 3           // Jump over #15 if 256 > reg4
15 addi 3 1 3           // Jump over #16
16 seti 27 6 3          // Jump to #28
17 seti 0 2 5           reg5 = 0
18 addi 5 1 2           reg2 = reg5 + 1
19 muli 2 256 2         reg2 = reg2 * 256
20 gtrr 2 4 2           reg2 = reg2 > reg4
21 addr 2 3 3           // Jump over #22 if reg2 > reg4
22 addi 3 1 3           // Jump over #23
23 seti 25 3 3          // Jump to #26
24 addi 5 1 5           reg5 = reg5 + 1
25 seti 17 1 3          // Jump to #18
26 setr 5 6 4           reg4 = reg5
27 seti 7 8 3           // Jump to #8
28 eqrr 1 0 5           reg5 = reg1 == reg0
29 addr 5 3 3           // Jump over #30 if reg1==reg0
30 seti 5 6 3           // Jump to #6



reg1 = 0
reg4 = reg1 | 0x10000
reg1 = 0x39f737

while 1:
    reg5 = reg4 & 0xff
    reg1 = reg1 + reg5
    reg1 = reg1 & 0xffffff
    reg1 = reg1 * 0x1035
    reg1 = reg1 & 0xffffff
    if(reg4 < 256)
        if(reg1 == reg0)
            return
        else
            reg4 = reg1 | 0x10000
            reg1 = 0x39f737
    else        
        reg4 = reg4 >> 8
        



x = 0x39f737
y = 0x10000

while x != reg0
    while y >=256:
        x = (((x + y %256) %0xffffff) * 65899) % 0xffffff
        y = y>>8
    y = x | 0x10000



